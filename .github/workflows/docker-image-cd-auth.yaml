name: Deploy to Google Cloud From GHCR

on:
  workflow_run:
    workflows: ["Docker Image for Auth Service CI"]  # The name of your CI workflow
    types:
      - completed  # Triggers when the CI workflow has completed
    branches:
      - main
  pull_request:
    branches: [ "main" ]
  

jobs:
  push_to_gcr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_DEPLOY }}
          project_id: meta-geography-243114

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Pull image from GHCR
        run: docker pull ghcr.io/rishirajkumar97/auth-service:latest

      - name: Tag image for Google Artifact Registry
        run: docker tag ghcr.io/rishirajkumar97/auth-service:latest gcr.io/meta-geography-243114/awt_cw/auth-service:latest

      - name: Push image to Google Artifact Registry
        run: docker push gcr.io/meta-geography-243114/awt_cw/auth-service:latest
  deploy_to_compute_engine:
    name: Deploy to Compute Engine
    runs-on: ubuntu-latest
    needs: push_to_gcr  # This job runs only after the push_to_gcr job completes
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
        with:
          service_account_key: ${{ secrets.GCP_DEPLOY }}
          project_id: meta-geography-243114

      - name: Delete resource if it exists
        run: |
          gcloud compute instances delete my-auth-service-instance --zone europe-west2-a

      - name: Create or update instance with new Docker image and environment variables
        run: |
          gcloud compute instances create-with-container my-auth-service-instance \
            --zone=europe-west2-a \
            --machine-type=e2-micro \
            --container-image=gcr.io/meta-geography-243114/awt_cw/auth-service:latest \
            --tags=http-server,https-server \
            --container-env=AUTH_DATABASE_URL=${{ secrets.AUTH_DATABASE_URL }},DEVISE_JWT_SECRET_KEY=${{ secrets.DEVISE_JWT_SECRET_KEY }},SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE_AUTH }}